<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2014-2015 Codenvy, S.A.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Codenvy, S.A. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>contributor-parent</artifactId>
        <groupId>com.codenvy.plugin-contribution</groupId>
        <version>1.4.1</version>
    </parent>
    <artifactId>codenvy-plugin-contribution</artifactId>
    <name>Codenvy Plugin :: Contribution :: Contribution</name>
    <properties>
        <dto-generator-out-directory>${project.build.directory}/generated-sources/dto/</dto-generator-out-directory>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.codenvy.plugin-contribution</groupId>
            <artifactId>codenvy-contribution-projecttype</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.codenvy.plugin-contribution</groupId>
            <artifactId>codenvy-contribution-vcs</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${com.google.gwt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-client-gwt-user</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-commons-gwt</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-ide-api</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.plugin</groupId>
            <artifactId>che-plugin-git-ext-git</artifactId>
            <version>${che.plugins.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.plugin</groupId>
            <artifactId>che-plugin-github-ext-github</artifactId>
            <version>${che.plugins.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.gwt.inject</groupId>
            <artifactId>gin</artifactId>
            <version>${com.google.gwt.gin.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${com.google.code.guice.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>${dto-generator-out-directory}</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${dto-generator-out-directory}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>pre-compile</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.che.core</groupId>
                <artifactId>che-core-api-dto-maven-plugin</artifactId>
                <version>${che.core.version}</version>
                <!-- only need client side -->
                <executions>
                    <execution>
                        <id>generate-client-dto</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <dtoPackages>
                                <package>com.codenvy.plugin.contribution.client.steps</package>
                            </dtoPackages>
                            <outputDirectory>${dto-generator-out-directory}</outputDirectory>
                            <genClassName>com.codenvy.plugin.contribution.client.dto.DtoClientImpls</genClassName>
                            <impl>client</impl>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <!-- this current module needs to be in the dto maven plugin dependencies so its DTO can be processed and generated -->
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${project.artifactId}</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
